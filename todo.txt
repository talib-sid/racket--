features (to implement):

- variable defn
- function defn
- control structure (if-else)
- stl list/vector mapping
- functional calls with valid signature
(void, int, bool, float for now)
[maybe use lambda or std::function or allow both]



steps-
 
- Racket's AST (Parser) [Done]

- IR from this Tree (can use llvm, mayb or boost string, custom)

- Functional Construction

- basic type mapping and inference

- using the IR to go to C++ now (can use llvm)

possible (if time):
- variadic templates and list inialisation for stl types
- smart pointers to account for rackets garbage collection?
- macro support using ANTLR